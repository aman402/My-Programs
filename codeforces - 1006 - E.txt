#include <bits/stdc++.h>
using namespace std;

void dfs(vector<int> adj[], vector<int> &trav, vector<int> p[], int u)
{
    p[u].push_back(trav.size());
    trav.push_back(u);
    for(int i = 0; i < adj[u].size(); ++i)
    {
        dfs(adj, trav, p, adj[u][i]);
    }
    p[u].push_back(trav.size());
}
int main()
{
    int n, q;
    cin>>n>>q;
    vector<int> adj[n + 1], trav, p[n + 1];
    for(int i = 2; i <= n; ++i)
    {
        int x;
        cin>>x;
        adj[x].push_back(i);
    }
    dfs(adj, trav, p, 1);
    while(q--)
    {
        int u, k;
        cin>>u>>k;
        int left = p[u][0], right = p[u][1];
        if(left + k - 1 < right)
        {
            cout<<trav[left + k - 1]<<endl;
        }
        else
        {
            cout<<"-1"<<endl;
        }
    }
    return 0;
}